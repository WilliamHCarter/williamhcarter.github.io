---
export interface Props {
  title: string;
  body: string;
  src: string;
  srcmobile: string;
  link: string;
  techStack: Array<{ alt: string; src: string }>;
}

const { src, srcmobile, title, body, link, techStack } = Astro.props;
---

<div class="link-card flex p-1 mb-8">
  <a class="w-full no-underline leading-[1.4] flex flex-col" href={link}>
    <div class="thumbnail-container relative overflow-hidden rounded bg-[#dddddd]">
      <img
        class="hidden pc:block img image object-cover w-full aspect-[16/10]"
        src={src}
        width="600px"
        alt="Astro"
      />
      <img
        class="pc:hidden img image object-cover w-full aspect-[16/10]"
        src={srcmobile}
        alt="Astro"
      />
      <div class="absolute bottom-0 right-0 scale-[1.4] -translate-x-[20%] flex align-center">
        {
          techStack.map(({ alt, src }) => (
            <div class="flex justify-center items-center ml-0.5 mb-2.5 mr-1.5  ">
              <embed src={src} class="embed rounded-sm h-5" />
            </div>
          ))
        }
      </div>
    </div>
    <h2 class="text-xl mt-2 mb-0">
      {title}
    </h2>
    <p class="text-dark dark:text-offw mt-2 mb-0 mr-[15%]">
      {body}
    </p>
  </a>
</div>

<style>
  .thumbnail-container::before {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 20%;
    background: linear-gradient(to top, rgba(0, 0, 0, 0.55), transparent);
  }
</style>
